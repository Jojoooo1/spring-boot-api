name: "Release Candidate - Test & Deploy to Test"

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ main ]

env:
  IMAGE_NAME: api

concurrency:
  group: ci-deploy-rc-${{ github.ref }}
  cancel-in-progress: true

jobs:
  
  rc-test:
    if: contains(toJSON(github.head_ref), 'release/') || contains(toJSON(github.head_ref), 'hotfix/')
    runs-on: ubuntu-latest
    steps:
      
      # 1. Setup
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3.13.0
        with:
          distribution: 'liberica'
          java-version: '21'
          cache: 'maven'
      
      # 2. Test
      - name: Run Unit & Integration Tests
        run: mvn clean verify --no-transfer-progress
  
  rc-deploy:
    needs: [ rc-test ]
    runs-on: ubuntu-latest
    environment: test
    outputs:
      IMAGE_TAG: ${{ steps.variables.outputs.IMAGE_TAG }}
      IMAGE_REGISTRY: ${{ steps.variables.outputs.IMAGE_REGISTRY }}
    
    # Necessary for workload identity provider
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
      
      # 1. Setup
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3.13.0
        with:
          distribution: 'liberica'
          java-version: '21'
          cache: 'maven'
      
      # 2.1 Sets variables
      - name: Sets release variables
        id: variables
        run: |
          git fetch --prune --prune-tags origin
          
          # 1. Get tags
          LATEST_TAG=$(git describe --tags "$(git rev-list --tags --max-count=1)") # gets tags across all branches, not just the current branch
          TAG_LIST=($(echo $LATEST_TAG | tr '.' ' '))
          [[ "${#TAG_LIST[@]}" -ne 2 ]] && echo "$RELEASE_VERSION is not a valid version" && exit 1
          
          # 2. Set release version
          if [[ "$GITHUB_HEAD_REF" == release* ]]
          then
            RELEASE_VERSION=$(( TAG_LIST[0] + 1 )).0;
          else
            RELEASE_VERSION=${TAG_LIST[0]}.$(( TAG_LIST[1] + 1));
          fi
          
          # 3. Set vars
          IMAGE_REGISTRY="us-docker.pkg.dev/${{ secrets.PROJECT_ID }}/cloud-diplomats/${{ env.IMAGE_NAME }}"
          IMAGE_TAG=${RELEASE_VERSION}-$(git rev-parse --short=4 HEAD)-rc
          
          # 4. Set envs & outputs
          echo "IMAGE_REGISTRY=$IMAGE_REGISTRY" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "IMAGE_REGISTRY=${IMAGE_REGISTRY}" >> $GITHUB_OUTPUT
      
      # 2.2 Echo variables
      - name: Echo variables
        run: |
          echo "IMAGE_TAG=$IMAGE_TAG"
          echo "IMAGE_REGISTRY=$IMAGE_REGISTRY"
      
      # 3.1. Setup gcloud
      - id: auth
        uses: google-github-actions/auth@v1.2.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }} # impersonated SA
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1
        with:
          project_id: ${{ secrets.PROJECT_ID }}
      
      # 3.2. Configure docker to use gcloud as a credential helper
      - name: Setup docker to authenticate via gcloud
        run: gcloud --quiet auth configure-docker us-docker.pkg.dev
      
      # 4. Build image using maven
      - name: Build image
        run: mvn clean package -DskipTests spring-boot:build-image --no-transfer-progress -Dspring-boot.build-image.imageName=$IMAGE_REGISTRY:$IMAGE_TAG
      
      # 5. Push image to registry
      - name: Push image to registry
        run: docker push $IMAGE_REGISTRY:$IMAGE_TAG
      
      # 6. Notify if fails
      #      - name: Notify slack fail
      #        if: failure()
      #        env:
      #          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
      #        uses: voxmedia/github-action-slack-notify-build@v1
      #        with:
      #          channel: app-alerts
      #          status: FAILED
      #          color: danger