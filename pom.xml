<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.4</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  
  <groupId>com.mycompany.microservice</groupId>
  <artifactId>api</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <name>api</name>
  <description>Demo API project for Spring Boot</description>
  
  <properties>
    <java.version>21</java.version>
    
    <!-- Database -->
    <postgresql.version>42.7.3</postgresql.version>
    <querydsl.version>5.1.0</querydsl.version>
    <flyway-core.version>10.8.1</flyway-core.version>
    <hypersistence-utils.version>3.7.4</hypersistence-utils.version>
    
    <!-- Logging -->
    <logstash.version>7.4</logstash.version>
    
    <!-- Telemetry -->
    <opentelemetry-api.version>1.36.0</opentelemetry-api.version>
    <pyroscope-agent.version>0.13.1</pyroscope-agent.version>
    
    <!-- Lombok & Mapstruct -->
    <projectlombok.version>1.18.32</projectlombok.version>
    <mapstruct.version>1.5.5.Final</mapstruct.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    
    <!-- utilities -->
    <spring-cloud.version>2023.0.0</spring-cloud.version>
    <bucket4j-core.version>8.4.0</bucket4j-core.version>
    <slack-api-client.version>1.39.0</slack-api-client.version>
    <apache-commons-text.version>1.11.0</apache-commons-text.version>
    <apache-commons-collection.version>4.4</apache-commons-collection.version>
    
    <!-- Development-->
    <git-code-format-maven-plugin.version>5.3</git-code-format-maven-plugin.version>
    
    <!-- Test -->
    <testcontainers.version>1.19.7</testcontainers.version>
  
  </properties>
  <dependencies>
    
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    
    <!-- Web Client -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    
    <dependency>
      <groupId>io.github.resilience4j</groupId>
      <artifactId>resilience4j-reactor</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.resilience4j</groupId>
      <artifactId>resilience4j-circuitbreaker</artifactId>
    </dependency>
    
    <!-- Spring Security & JWT -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
    </dependency>
    
    <!-- Database -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
      <!-- Removed in order to import PSQL exception -->
      <!-- <scope>runtime</scope> -->
    </dependency>
    
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.hypersistence</groupId>
      <artifactId>hypersistence-utils-hibernate-63</artifactId>
      <version>${hypersistence-utils.version}</version>
    </dependency>
    
    <!-- Database access -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>com.querydsl</groupId>
      <artifactId>querydsl-jpa</artifactId>
      <version>${querydsl.version}</version>
      <classifier>jakarta</classifier>
    </dependency>
    <dependency>
      <groupId>com.querydsl</groupId>
      <artifactId>querydsl-apt</artifactId>
      <version>${querydsl.version}</version>
      <scope>provided</scope>
      <optional>true</optional>
      <classifier>jakarta</classifier>
    </dependency>
    
    <!-- Telemetry -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-api</artifactId>
      <version>${opentelemetry-api.version}</version>
    </dependency>
    
    <!-- Profiling -->
    <dependency>
      <groupId>io.pyroscope</groupId>
      <artifactId>agent</artifactId>
      <version>${pyroscope-agent.version}</version>
    </dependency>
    
    <!-- Logs json encoder -->
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logstash.version}</version>
    </dependency>
    
    <!-- Data & Serialization -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
      <version>${projectlombok.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-processor</artifactId>
      <version>${mapstruct.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok-mapstruct-binding</artifactId>
      <version>${lombok-mapstruct-binding.version}</version>
    </dependency>
    
    <!-- Infra-->
    <!-- Cache -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <!-- RabbitMQ -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-amqp</artifactId>
    </dependency>
    <!-- Kubernetes -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-kubernetes-client</artifactId>
    </dependency>
    
    <!-- Utilities-->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>${apache-commons-text.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>4.4</version>
    </dependency>
    <dependency>
      <groupId>com.slack.api</groupId>
      <artifactId>slack-api-client</artifactId>
      <version>${slack-api-client.version}</version>
    </dependency>
    
    <!-- Development tools -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    
    <!-- Testing libraries -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <!-- exclude junit 4 -->
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>rabbitmq</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
  
  </dependencies>
  
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.opentelemetry</groupId>
        <artifactId>opentelemetry-bom</artifactId>
        <version>1.36.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <build>
    <plugins>
      
      <!-- Unit tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
      </plugin>
      
      <!-- Integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.2.5</version>
      </plugin>
      
      
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <image>
            <env>
              <BP_JVM_VERSION>21</BP_JVM_VERSION>
            </env>
            <createdDate>${maven.build.timestamp}</createdDate>
            <bindings>
              <binding>
                ${project.basedir}/opentelemetry:/workspace/opentelemetry
              </binding>
            </bindings>
          </image>
        </configuration>
      </plugin>
      
      <!-- SPRING_PROFILES_ACTIVE=dev mvn clean -Pnative -DskipTests spring-boot:build-image -->
      <!-- uncomment if you want to compile with native profile -->
      <!-- <plugin> -->
      <!--   <groupId>org.graalvm.buildtools</groupId> -->
      <!--   <artifactId>native-maven-plugin</artifactId> -->
      <!-- </plugin> -->
      
      <!-- <plugin> -->
      <!--   <groupId>org.springframework.boot</groupId> -->
      <!--   <artifactId>spring-boot-maven-plugin</artifactId> -->
      <!--   <configuration> -->
      <!--     <image> -->
      <!--       &lt;!&ndash; Default (build and run as non-root (runAsUser: 1000)) &ndash;&gt; -->
      <!--       &lt;!&ndash; <builder>paketobuildpacks/builder-jammy-base:</builder> &ndash;&gt; -->
      <!--       &lt;!&ndash; Native &ndash;&gt; -->
      <!--       &lt;!&ndash; <builder>paketobuildpacks/builder-jammy-tiny:latest</builder> &ndash;&gt; &lt;!&ndash; already set in parent native profile &ndash;&gt; -->
      <!--        -->
      <!--       <env> -->
      <!--         &lt;!&ndash; <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE> &ndash;&gt; &lt;!&ndash; already set in parent with native profile &ndash;&gt; -->
      <!--         &lt;!&ndash; <BP_NATIVE_IMAGE_BUILD_ARGUMENTS> &ndash;&gt; -->
      <!--         &lt;!&ndash;   -H:+AddAllCharsets &ndash;&gt; -->
      <!--         &lt;!&ndash;   -H:+ReportExceptionStackTraces &ndash;&gt; -->
      <!--         &lt;!&ndash;   -H:+UnlockExperimentalVMOptions &ndash;&gt; -->
      <!--         &lt;!&ndash;    &ndash;&gt; -->
      <!--         &lt;!&ndash;   -H:ReflectionConfigurationFiles=/workspace/META-INF/native-image/logback-config.json &ndash;&gt; -->
      <!--         &lt;!&ndash;    &ndash;&gt; -->
      <!--         &lt;!&ndash;   &#45;&#45;initialize-at-run-time=io.netty.handler.ssl.BouncyCastleAlpnSslUtils &ndash;&gt; -->
      <!--         &lt;!&ndash;   &#45;&#45;initialize-at-build-time=ch.qos.logback,org.slf4j.LoggerFactory,org.slf4j.MDC &ndash;&gt; -->
      <!--         &lt;!&ndash; </BP_NATIVE_IMAGE_BUILD_ARGUMENTS> &ndash;&gt; -->
      <!--         <BP_JVM_VERSION>21</BP_JVM_VERSION> -->
      <!--       </env> -->
      <!--       <createdDate>${maven.build.timestamp}</createdDate> -->
      <!--     </image> -->
      <!--   </configuration> -->
      <!-- </plugin> -->
      
      <!-- Code formatting hooks -->
      <plugin>
        <groupId>com.cosium.code</groupId>
        <artifactId>git-code-format-maven-plugin</artifactId>
        <version>${git-code-format-maven-plugin.version}</version>
        <executions>
          <!-- On commit, format the modified files -->
          <execution>
            <id>install-formatter-hook</id>
            <goals>
              <goal>install-hooks</goal>
            </goals>
          </execution>
          <execution>
            <id>validate-code-format</id>
            <goals>
              <goal>validate-code-format</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.cosium.code</groupId>
            <artifactId>google-java-format</artifactId>
            <version>${git-code-format-maven-plugin.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    
    </plugins>
  </build>
  
  <!-- (you don't need this if you are using a .RELEASE version) -->
  <repositories>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-snapshots</id>
      <name>Spring Snapshots</name>
      <url>https://repo.spring.io/snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>spring-snapshots</id>
      <name>Spring Snapshots</name>
      <url>https://repo.spring.io/snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

</project>
