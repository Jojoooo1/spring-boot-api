slack:
  env: api-dev
  channels:
    api-alert:
      url: http://your-slack-bot-url.com/example
      name: api-alert

http:
  clients:
    webhook-site:
      base-url: https://webhook.site/b4b43dbd-9980-4690-8db7-e50be66e4d0c

rabbitmq:
  host: localhost
  port: 5672
  username: user
  password: password
  listeners:
    event:
      queue: webhook
  publishers:
    webhook:
      exchange: outbound
      routingkey: to_outbound_webhook

profiling:
  pyroscope:
    enabled: false
    server: http://pyroscope-local.cloud-diplomats.com

management:
  endpoint:
    health:
      show-details: always
  
  # for testing purpose you can use https://github.com/CtrlSpice/otel-desktop-viewer
  tracing:
    sampling:
      probability: 1
  otlp:
    tracing:
      endpoint: http://localhost:4317

jdbc:
  datasource-proxy:
    include-parameter-values: true

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/api?stringtype=unspecified&reWriteBatchedInserts=true
    username: user
    password: password
  jpa:
    properties:
      hibernate:
        show_sql: false
        format_sql: false
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8000/realms/api
          jwk-set-uri: http://localhost:8000/realms/api/protocol/openid-connect/certs
  
  devtools:
    restart:
      enabled: false

logging:
  level:
    web: info
    # org.springframework.cache: TRACE
    # hibernate.SQL: DEBUG
    # hibernate.engine.jdbc.batch.internal.BatchingBatch: DEBUG
    #Â reactor.netty.http.client.HttpClient: DEBUG

